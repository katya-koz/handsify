@model Handsify.Models.PageInfoModel
<!DOCTYPE html>
<html lang="en">
<head>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Roboto:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">



    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/Handsify.styles.css" asp-append-version="true" />

    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Handsify</title>
</head>
<body>

    <div class="row tab limited-height">
        <div class="col-6">
            <div id="container-fluid" class="d-flex align-items-center">
                <p id="handsify-title">Handsify</p>
                <img src="/images/handsify-logo.svg" id="logo" />

            </div>
        </div>
        <div class="col-3"></div>
        <div class="col-3 d-flex flex-column align-items-center justify-content-center">
            <h5 class="text">Signed in as <b>@Model.LoggedInUser.Name</b></h5>
            <h6><i>Log Out</i></h6>
        </div>
    </div>
        
         <div class="row" id="tab-container">
            <div class="col-2 tab-element">
                <p>Mode</p>
                <div class="dropdown">
                <button class="btn btn-secondary dropdown-toggle" type="button" id="mode-dropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    @if (Model.Navbar.SelectedModeIndex >= 0 && Model.Navbar.SelectedModeIndex < Handsify.Models.NavbarModel.Modes.Count)
                    {
                        @Handsify.Models.NavbarModel.Modes[Model.Navbar.SelectedModeIndex]
                    }
                    else
                    {
                        @* Handle the case where the index is invalid or out of range *@
                        <span>Select Mode</span>
                    }
                </button>
                    <div class="dropdown-menu" aria-labelledby="mode-dropdown">

                    @foreach (KeyValuePair<int, string> mode in Handsify.Models.NavbarModel.Modes)
                    {
                                <a 
                                    class="dropdown-item" 
                                    onclick="showMode('@mode.Value')"
                           data-index="@mode.Key">
                                    @mode.Value
                                </a>
                        }

                    </div>
                </div>
            </div>
            <div class="col-2  tab-element">
                <p>Floor</p>
                <div class="dropdown">
                    <button class="btn btn-secondary dropdown-toggle" type="button" id="floor-dropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    @if (Model.Navbar.SelectedFloorIndex >= 0 && Model.Navbar.SelectedFloorIndex < Handsify.Models.NavbarModel.Floors.Count)
                    {
                        @Handsify.Models.NavbarModel.Floors[Model.Navbar.SelectedFloorIndex]
                    }
                    else
                    {
                        @* Handle the case where the index is invalid or out of range *@
                        <span>Select Floor</span>
                    }
                    </button>
                    <div class="dropdown-menu" aria-labelledby="floor-dropdown">

                    @foreach (KeyValuePair<int, string> floor in Handsify.Models.NavbarModel.Floors)
                        {
                            <a 
                                class="dropdown-item" 
                                onclick="showFloor('@floor.Value')"
                           data-index="@floor.Key">
                                @floor.Value
                            </a>
                        }
                    </div>
                </div>
            </div>
            <div class="col-2  tab-element">
                <p>Unit</p>
                <div class="dropdown">
                    <button class="btn btn-secondary dropdown-toggle" type="button" id="unit-dropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    @if (Model.Navbar.SelectedUnitIndex >= 0 && Model.Navbar.SelectedUnitIndex < Handsify.Models.NavbarModel.Units.Count)
                    {
                        @Handsify.Models.NavbarModel.Units[Model.Navbar.SelectedUnitIndex]
                    }
                    else
                    {
                        @* Handle the case where the index is invalid or out of range *@
                        <span>Select Unit</span>
                    }
                    </button>
                    <div class="dropdown-menu" aria-labelledby="unit-dropdown" id="unit-dropdown-items">
                    @foreach (KeyValuePair<int, string> unit in Handsify.Models.NavbarModel.Units)
                        {
                        @if(Model.Navbar.AvailableUnitsForFloor.Contains(unit.Value)){
                            <a class="dropdown-item"
                               onclick="showUnit('@unit.Value')"
                               data-index="@unit.Key">
                                @unit.Value
                            </a>
                        }
                        else // disable if not availble
                        {
                            <a class="dropdown-item disabled"
                               onclick="showUnit('@unit.Value')"
                               data-index="@unit.Key">
                                @unit.Value
                            </a>
                        }
                        
                        }
                    </div>
                </div>
            </div>
            <div class="col-6">

            </div>
    </div> 
    <div class="main-layout row">
        <main role="main">
            @RenderBody()
        </main>
</div>
    
@* 
    <div class="container" id="main-container">
        <main role="main">
            @RenderBody()
        </main>
    </div> *@

    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
    <script type="module" src="~/js/navigation.js"></script>
    @await RenderSectionAsync("Scripts", required: false)

</body>
</html>

